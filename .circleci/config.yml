version: 2.1
orbs:
  gh: circleci/github-cli@2.2.0

jobs:
  push-artifact:
    docker:
      - image: cimg/base:stable
    working_directory: /home/circleci/project
    steps:
      - gh/install
      - gh/setup
      - run: sudo apt update -y && sudo apt install php -y
      - run:
          name: Install Composer.
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php -r "if (hash_file('sha384', 'composer-setup.php') === 'e21205b207c3ff031906575712edab6f13eb0b361f2085f1f1237b7126d785e826a450292b6cfd1d64d92e6563bbde02') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
            php composer-setup.php
            php -r "unlink('composer-setup.php');"
            chmod +x composer.phar
              sudo mv composer.phar /usr/local/bin/composer
      - run:
          name: Install box.
          command: |
            composer global require humbug/box
      - checkout
      - run:
          name: Compiling Phar...
          command: |
             composer install
             ./../.config/composer/vendor/bin/box compile
      - run:
          name: Pushing phar to GH release.
          command: >
            #!/usr/bin/env bash
            additional_args=""
            files="$(eval printf '%s\\n' " /home/circleci/project/fire.phar")"
            hostname="github.com"
            tag="$(eval printf '%s' "$CIRCLE_TAG")"
            token="${!GITHUB_TOKEN}"
            [ -z "$token" ] && {
              printf >&2 '%s\n' "A GitHub token must be supplied" "Check the \"token\" parameter."
              exit 1
            }
            printf '%s\n' "export GITHUB_TOKEN=$token" >>"$BASH_ENV"
            [ -n "$hostname" ] && printf '%s\n' "export GITHUB_HOSTNAME=$hostname"
            >>"$BASH_ENV"
            set -x
            # shellcheck disable=SC2086
            gh release upload \
              "$tag" \
              $files \
              --repo "$(git config --get remote.origin.url)" \
              $additional_args
            set +x



workflows:
   build-deploy:
     jobs:
      - push-artifact:
          filters:
            tags:
              only:
                - /^v.*/
            branches:
              ignore: /.*/
